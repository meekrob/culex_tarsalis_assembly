configfile: "config/config.yaml"
ma_config = config["maker_annotator"]
slurm_config = config["slurm"]

rule braker:
    input:
        genome = lambda wc: os.path.join("data", "genome", os.listdir(os.path.join("data", "genome"))[0]) if os.path.exists(os.path.join("data", "genome")) else "",
        bam = lambda wc: os.path.join("data", "transcriptome.bam"),
        sif = lambda wc: "pipelines/maker_annotator/braker.sif"
    output:
        gff3 = "results/maker_annotator/braker/augustus.hints.gff3"
    log:
        "logs/maker_annotator/braker.log"
    resources:
        partition = slurm_config["default"]["partition"],
        time = slurm_config["maker"]["braker"]["time"],
        cpus = slurm_config["maker"]["braker"]["cpus"],
        mem = slurm_config["maker"]["braker"]["mem"]
    params:
        species_name = ma_config['species_name'],
        output_dir = "results/maker_annotator/braker"
    shell:
        """
        singularity exec {input.sif} braker.pl --genome={input.genome} --bam={input.bam} \
            --species={params.species_name} --cores={resources.cpus} \
            --workingdir={params.output_dir} 2>> {log}
        """