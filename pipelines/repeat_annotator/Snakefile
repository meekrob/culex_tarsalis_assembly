configfile: "config/config.yaml"
ra_config = config["repeat_annotator"]
slurm_config = config["slurm"]

rule repeatmasker:
    input:
        genome = lambda wc: os.path.join(config["data_dir"], "genome", os.listdir(os.path.join(config["data_dir"], "genome"))[0]) if os.path.exists(os.path.join(config["data_dir"], "genome")) else "",
        repeat_lib = config["repeat_annotator"]["repeat_lib"]
    output:
        masked = "results/repeat_annotator/{}.masked".format(os.path.basename(config["repeat_annotator"]["genome_dir"]))
    log:
        "logs/repeat_annotator/repeatmasker.log"
    params:
        output_dir = "results/repeat_annotator"
    conda:
        ra_config["conda_env"]
    resources:
        partition = slurm_config["default"]["partition"],
        time = slurm_config["repeat"]["repeatmasker"]["time"],
        cpus = slurm_config["repeat"]["repeatmasker"]["cpus"],
        mem = slurm_config["repeat"]["repeatmasker"]["mem"]
    shell:
        """
        RepeatMasker -s -lib {input.repeat_lib} {input.genome} -pa {resources.cpus} \
                     -dir {params.output_dir} 2>> {log}
        """